@mixin square($size, $radius: 0) {
    width: $size;
    height: $size;

    @if $radius != 0 {
        border-radius: $radius;
    }
}

@mixin hover {
    &:not([disabled]):hover {
        @content;
    }
}

@mixin css3-compatible($atribute, $params) {
    #{$atribute}: #{$params};
    -webkit-#{$atribute}: #{$params};
    -khtml-#{$atribute}: #{$params};
    -moz-#{$atribute}: #{$params};
    -ms-#{$atribute}: #{$params};
    -o-#{$atribute}: #{$params};
}

@mixin flex-ul($paddingItem: 5px, $colorItem: #000, $textDecoration: none) {
    display: flex;
    align-items: center;
    justify-content: center;
    list-style: none;
    a {
        text-decoration: $textDecoration;
        padding: $paddingItem;
        color: $colorItem;
    }
}
@mixin flex-center($direction: row) {
    display: flex;
    flex-direction: $direction;
    align-items: center;
    justify-content: center;
}

@mixin flex-l($direction: row) {
    display: flex;
    flex-direction: $direction;
    align-items: center;
    justify-content: left;
}

@mixin flex-r($direction: row) {
    display: flex;
    flex-direction: $direction;
    align-items: center;
    justify-content: right;
}

@mixin flex-sp($direction: row) {
    display: flex;
    flex-direction: $direction;
    align-items: center;
    justify-content: space-between;
}

@mixin bg-100($direction: row) {
    background-size: 100%;
    background-repeat: no-repeat;
    @content;
}

@mixin border-radius($radius: $border-radius) {
    border-radius: $radius;
}

@mixin border-top-radius($radius) {
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;
}

@mixin border-right-radius($radius) {
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius) {
    border-top-left-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin slick-arrow($prev-position: 0, $next-position: 0, $bottom-position: 0) {
    .slick-arr-before{
        content: "";
        width: 0.875rem;
        height: 1.5625rem;
        display: block;
        background-image: url("../images/ic-right-arrow-slick.png");
        background-repeat: no-repeat;
        background-size: 100%;
    }
    .slick-arrow {
        position: absolute;
        bottom: $bottom-position;
        z-index: 2;
        font-size: 0;
        line-height: 0;
        padding: 0;
        border: none;
        background: transparent;
        cursor: pointer;
        &.slick-next {
            right: $next-position;
            &::before {
                @extend .slick-arr-before;
            }
        }
        &.slick-prev {
            left: $prev-position;
            &::before {
                @extend .slick-arr-before;
                transform: rotate(180deg);
            }
        }
        @content
    }
}

$mobile-width: 480px; 
$tablet-width: 768px; 
$desktop-width: 1025px;  

@mixin mobile { @media (max-width: #{$mobile-width - 1px}) {     
  @content;   
 } 
}

@mixin mobile-and-tablet { @media (max-width: #{$desktop-width}) {     
  @content;   
 } 
}

@mixin tablet { @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {       
   @content;   
 } 
}  

@mixin desktop {   @media (min-width: #{$desktop-width}) {     
  @content;  
 } 
}

$XS:     480px;   
$SM:     768px;  
$MD:    1024px;   
$XL:   1170px;     


@mixin Responsive($canvas) {
  @if $canvas == XS {
   @media only screen and (min-width: $XS) { @content; } 
  }
  @else if $canvas == SM {
   @media only screen and (min-width: $SM) { @content; } 
  }
  @else if $canvas == MD {
   @media only screen and (min-width: $MD) { @content; } 
  }
  @else if $canvas == XL {
   @media only screen and (min-width: $XL) { @content; } 
  }
}